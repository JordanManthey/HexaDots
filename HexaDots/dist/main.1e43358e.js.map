{"version":3,"sources":["src/constants.js","src/utils.js","src/scenes/MenuScene.js","src/classes/Dot.js","src/classes/HexaGrid.js","src/classes/GameManager.js","src/classes/GraphicsManager.js","src/scenes/PlayScene.js","src/main.js","../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["constants","SCENES","MENU","PLAY","IMAGES","TITLE","BG","DOT","GAMEOVER","RESTART","QUIT","COLORS","RED","ORANGE","YELLOW","BLUE","PURPLE","GREEN","PINK","TURQUOISE","GAME_SETTINGS","NUM_COLS","NUM_ROWS","NUM_COLORS","TIME_LIMIT","EDGE_BUFFER","X","Y","DOT_BUFFER","getRandomColor","colorHexList","Object","values","randomIndex","Math","floor","random","colorHexValue","loadImages","scene","folder","load","setPath","key","image","getCoordinatesObj","col","row","coordinatesObj","MenuScene","add","setOrigin","setDepth","game","renderer","width","height","playButton","setInteractive","playIndicators","createPlayIndicators","forEach","hideIndicator","on","showIndicator","start","leftIndicator","circle","x","y","rightIndicator","indicator","setFillStyle","setVisible","Phaser","Scene","Dot","gridCell","color","scale","getDotScale","t","setTint","setScale","createdAnimation","existing","otherDot","xDiff","yDiff","abs","dropPath","nextPosition","Vector2","getPoint","setPosition","tween","tweens","targets","scaleX","from","to","scaleY","ease","yoyo","repeat","duration","setCallback","destroy","stop","numCols","numRows","dotScale","GameObjects","Image","HexaGrid","gameSettings","selectedDots","grid","initializeGrid","fillGrid","dot","getDotDropPath","invokeDropAnimation","removeDotFromCell","targetCell","targetRow","startRow","points","push","path","Curves","Path","splineTo","destroyedAnimation","length","aboveDot","getClosestDotAbove","moveDotToCell","topRowHasEmpty","colIndex","topCell","shiftDotsDown","hasEmpty","firstDot","lastDot","slice","getDotsWithSelectionColor","destroySelectedDots","selectionColor","filteredDots","column","cell","selectedAnimation","selectionIsLoop","prevDot","isAdjacent","includes","addDotToSelection","dotsDestroyed","destroyAllDotsWithColor","stopAnimation","dotBuffer","edgeBuffer","gridCenter","cameras","main","centerX","centerY","cellDistance","Array","cellPosition","GameManager","timeLimit","timer","time","delayedCall","endGame","score","gameOver","amount","scoreText","text","screenCenter","fontConfig","fontFamily","fontSize","timerText","getFormattedTime","restartButton","quitButton","timeRemaining","FloorTo","getRemainingSeconds","min","sec","GraphicsManager","backgroundGraphics","graphics","selectionGraphics","pointerGraphics","hexaGrid","xDistance","hexaGridx","hexaGridy","curve","Spline","lineStyle","draw","clear","beginPath","moveTo","i","lineTo","strokePath","pointer","input","activePointer","update","colorOverlay","uiHandler","selection","loop","fillColor","DOT_COLORS","colorId","_color","PlayScene","gameManager","startGame","graphicsManager","drawColumnLines","startSelection","bind","appendSelection","confirmSelection","drawPointerLine","updateDots","verifyDotSelection","drawSelectionLines","pointsScored","updateGrid","incrementScore","stopDotAnimations","config","type","AUTO","autoCenter","Scale","CENTER_BOTH","Game","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const constants = {\r\n\r\n  SCENES: {\r\n    MENU: 'MENU',\r\n    PLAY: 'PLAY'\r\n  },\r\n\r\n  IMAGES: {\r\n    TITLE: 'title.png',\r\n    BG: 'background.jpg',\r\n    PLAY: 'play.png',\r\n    DOT: 'dot.png',\r\n    GAMEOVER: 'gameover.png',\r\n    RESTART: 'restart.png',\r\n    QUIT: 'quit.png'\r\n  },\r\n\r\n  COLORS: {\r\n    RED: 0xD10003,\r\n    ORANGE: 0xFF9C00,\r\n    YELLOW: 0xFFFB00,\r\n    BLUE: 0x0044FF,\r\n    PURPLE: 0x8800FF,\r\n    GREEN: 0x00C510,\r\n    PINK: 0xFF4EF2,\r\n    TURQUOISE: 0x14dba6\r\n  },\r\n\r\n  GAME_SETTINGS: {\r\n    // Change game settings here.\r\n    NUM_COLS: 8,\r\n    NUM_ROWS: 6,\r\n    NUM_COLORS: 8,\r\n    TIME_LIMIT: 60, // In seconds.\r\n\r\n    // Don't change below.\r\n    EDGE_BUFFER: {\r\n      X: 65,\r\n      Y: 50\r\n    },\r\n    DOT_BUFFER: {\r\n      X: 0,\r\n      Y: 0\r\n    }\r\n  }\r\n}\r\n","import { constants } from './constants';\r\n\r\n// Returns a random dot color (hex value)\r\nexport function getRandomColor() {\r\n  let colorHexList = Object.values(constants.COLORS);\r\n  let randomIndex = Math.floor(Math.random() * constants.GAME_SETTINGS.NUM_COLORS);\r\n  let colorHexValue = colorHexList[randomIndex];\r\n  return colorHexValue;\r\n}\r\n\r\n// loads all images from the provided folder.\r\nexport function loadImages(scene, folder) {\r\n  scene.load.setPath(`assets/${folder}`);\r\n\r\n  for (let key in constants.IMAGES) {\r\n    scene.load.image(constants.IMAGES[key], constants.IMAGES[key]);\r\n  }\r\n}\r\n\r\n// Create a coordinate obj for easier grid manipulation.\r\nexport function getCoordinatesObj(col, row) {\r\n  let coordinatesObj = {\r\n    col: col,\r\n    row: row\r\n  };\r\n  return coordinatesObj;\r\n}\r\n","import { constants } from '../constants';\r\nimport { getRandomColor, loadImages } from '../utils';\r\n\r\nexport class MenuScene extends Phaser.Scene {\r\n\r\n  constructor() {\r\n    super({\r\n      key: constants.SCENES.MENU\r\n    });\r\n  }\r\n\r\n  preload() {\r\n    loadImages(this, 'menu');\r\n  }\r\n\r\n  create() {\r\n    this.add.image(0, 0, constants.IMAGES.BG).setOrigin(0).setDepth(-1);\r\n    this.add.image(this.game.renderer.width / 2, this.game.renderer.height * 0.2, constants.IMAGES.TITLE);\r\n\r\n    let playButton = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, constants.IMAGES.PLAY);\r\n    playButton.setInteractive();\r\n\r\n    let playIndicators = this.createPlayIndicators(playButton);\r\n    playIndicators.forEach(this.hideIndicator);\r\n\r\n    playButton.on('pointerover', ()=> { playIndicators.forEach(this.showIndicator) });\r\n    playButton.on('pointerout', ()=> { playIndicators.forEach(this.hideIndicator) });\r\n    playButton.on('pointerup', ()=> { this.scene.start(constants.SCENES.PLAY) });\r\n  }\r\n\r\n  createPlayIndicators(playButton) {\r\n    let leftIndicator = this.add.circle(playButton.x - playButton.width, playButton.y - 5, 15, constants.COLORS.RED)\r\n    let rightIndicator = this.add.circle(playButton.x + playButton.width, playButton.y - 5, 15, constants.COLORS.RED);\r\n    return [leftIndicator, rightIndicator]\r\n  }\r\n\r\n  // Shows the play button indicators and sets them to a random Dot color.\r\n  showIndicator(indicator) {\r\n    indicator.setFillStyle(getRandomColor());\r\n    indicator.setVisible(true);\r\n  }\r\n\r\n  hideIndicator(indicator) {\r\n    indicator.setVisible(false);\r\n  }\r\n}\r\n","import { constants } from '../constants';\r\n\r\nexport class Dot extends Phaser.GameObjects.Image {\r\n\r\n  /**\r\n * Creates a single Dot object used to populate HexaGrid.grid. Extends Image.\r\n * @param {Phaser.Scene} scene - The game scene that this dot is in.\r\n * @param {number} x - The dots x coordinate in worldspace.\r\n * @param {number} y - The dots y coordinate in worldspace.\r\n * @param {Object} gridCell - An object that holds the row and column indexes of the grid cell that this dot is currently in.\r\n * @param {String} - The hex value of this dots color.\r\n */\r\n  constructor(scene, x, y, gridCell, color) {\r\n    super(scene, x, y, constants.IMAGES.DOT);\r\n    this.gridCell = gridCell;\r\n    this.color = color;\r\n    this.scale = Dot.getDotScale();\r\n    this.t = 0; // timestep variable for driving dot animations.\r\n    this.setTint(color);\r\n    this.setScale(this.scale);\r\n    this.setInteractive();\r\n    this.createdAnimation();\r\n    scene.add.existing(this);\r\n\r\n  }\r\n\r\n  // Checks if this dot and otherDot are hexadjacent in the game grid.\r\n  isAdjacent(otherDot) {\r\n    let xDiff = this.gridCell.col - otherDot.gridCell.col;\r\n    let yDiff = this.gridCell.row - otherDot.gridCell.row;\r\n\r\n    // If the other dot is to the immediate left/right.\r\n    if (yDiff == 0 && Math.abs(xDiff) == 1) {\r\n      return true;\r\n    }\r\n    // If the other dot is above/below.\r\n    if (Math.abs(yDiff) == 1) {\r\n      // Adjusting for x offset that occurs from alternating rows.\r\n      if (this.gridCell.row % 2 == 0 && ((otherDot.gridCell.col == this.gridCell.col) || (otherDot.gridCell.col == this.gridCell.col - 1))) {\r\n        return true;\r\n      }\r\n      if (this.gridCell.row % 2 != 0 && ((otherDot.gridCell.col == this.gridCell.col) || (otherDot.gridCell.col == this.gridCell.col + 1))) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  static getDotScale() {\r\n    let numCols = constants.GAME_SETTINGS.NUM_COLS;\r\n    let numRows = constants.GAME_SETTINGS.NUM_COLS;\r\n    let dotScale = 7 / (numCols + numRows);\r\n    return dotScale;\r\n  }\r\n\r\n  // Update function to drive dot animation. Must be called manually.\r\n  update() {\r\n    if (this.dropPath && this.t >= 0) {\r\n      let nextPosition = new Phaser.Math.Vector2();\r\n      this.dropPath.getPoint(this.t, nextPosition);\r\n      this.setPosition(nextPosition.x, nextPosition.y);\r\n    }\r\n  }\r\n\r\n  selectedAnimation() {\r\n    this.tween = this.scene.tweens.add({\r\n      targets: this,\r\n      scaleX: {from: this.scale, to: this.scale*1.3},\r\n      scaleY: {from: this.scale, to: this.scale*1.3},\r\n      ease: 'Circle.out',\r\n      yoyo: true,\r\n      repeat: 1000,\r\n      duration: 1000,\r\n    })\r\n  }\r\n\r\n  createdAnimation() {\r\n    this.scene.tweens.add({\r\n      targets: this,\r\n      scaleX: {from: 0, to: this.scale},\r\n      scaleY: {from: 0, to: this.scale},\r\n      ease: 'Circular.out',\r\n      duration: 300,\r\n    });\r\n  }\r\n\r\n  destroyedAnimation() {\r\n    this.scene.tweens.add({\r\n      targets: this,\r\n      scaleX: {from: this.scale, to: 0},\r\n      scaleY: {from: this.scale, to: 0},\r\n      ease: 'Circular.in',\r\n      duration: 300,\r\n    })\r\n    .setCallback('onComplete', () => {\r\n      this.destroy();\r\n    }, []);\r\n  }\r\n\r\n  // Invoke this dots dropping animation. It then continues execution in this dot's update function.\r\n  invokeDropAnimation(dropPath) {\r\n    this.dropPath = dropPath;\r\n    this.scene.tweens.add({\r\n      targets: this,\r\n      t: {from: 0, to: 1},\r\n      ease: 'Circular.out',\r\n      duration: 300\r\n    })\r\n    .setCallback('onComplete', () => {\r\n      this.t = -1; // Stops this dot's update from being called once complete.\r\n    }, []);\r\n  }\r\n\r\n  // Stops any animation attached to the dot.\r\n  stopAnimation() {\r\n    if (this.tween) {\r\n      this.tween.stop();\r\n      this.setScale(this.scale);\r\n    }\r\n  }\r\n}\r\n","import { Dot } from './Dot';\r\nimport { getRandomColor, getCoordinatesObj } from '../utils';\r\n\r\nexport class HexaGrid {\r\n\r\n  /**\r\n * Create a HexaGrid and initializes its grid to random dot objects.\r\n   Hexagrid has access to all dots in play and keeps track of which dots are selected.\r\n * @param {Phaser.Scene} scene - The game scene that HexaGrid should interact with.\r\n * @param {Object} gameSettings - The game configuration that is set in /constants.js.\r\n   Users can change the number of columns, rows, dot colors, and the time limit for each round.\r\n */\r\n\r\n  constructor(scene, gameSettings) {\r\n    this.scene = scene;\r\n    this.numCols = gameSettings.NUM_COLS;\r\n    this.numRows = gameSettings.NUM_ROWS;\r\n    this.selectedDots = [];\r\n    this.grid = this.initializeGrid(gameSettings.DOT_BUFFER, gameSettings.EDGE_BUFFER);\r\n    this.fillGrid();\r\n  }\r\n\r\n  moveDotToCell(dot, col, row) {\r\n    // Invoking dot drop animation.\r\n    let dropPath = this.getDotDropPath(dot, row);\r\n    dot.invokeDropAnimation(dropPath);\r\n\r\n    // Logically moving dot object from current cell to target cell.\r\n    this.removeDotFromCell(dot);\r\n    let targetCell = this.grid[col][row];\r\n    targetCell.dot = dot;\r\n    dot.gridCell = getCoordinatesObj(col, row);\r\n  }\r\n\r\n  // Gets the path downwards from the dot's current row to the target row.\r\n  getDotDropPath(dot, targetRow) {\r\n    let col = dot.gridCell.col;\r\n    let startRow = dot.gridCell.row;\r\n    let points = [];\r\n\r\n    for (let row = startRow; row <= targetRow; row++) {\r\n      points.push(new Phaser.Math.Vector2(this.grid[col][row].x, this.grid[col][row].y));\r\n    }\r\n\r\n    let path = new Phaser.Curves.Path(this.grid[col][startRow].x, this.grid[col][startRow].y);\r\n    path.splineTo(points);\r\n    return path;\r\n  }\r\n\r\n  // Clears the grid cell that this dot is in.\r\n  removeDotFromCell(dot) {\r\n    let col = dot.gridCell.col;\r\n    let row = dot.gridCell.row;\r\n    this.grid[col][row].dot = null;\r\n  }\r\n\r\n  // Destroys all dots in current selection and returns the amount of destroyed.\r\n  destroySelectedDots() {\r\n    this.selectedDots.forEach((dot) => {\r\n      this.removeDotFromCell(dot);\r\n      dot.destroyedAnimation();\r\n    })\r\n    return this.selectedDots.length;\r\n  }\r\n\r\n  getClosestDotAbove(col, startRow) {\r\n    for (let row = startRow; row >= 0; row--) {\r\n      let dot = this.grid[col][row].dot;\r\n      // If this cell has a dot.\r\n      if (dot) { return dot; }\r\n    }\r\n    // There are no dots above in this column.\r\n    return null;\r\n  }\r\n\r\n  // Shifts down dots with empty space below.\r\n  shiftDotsDown() {\r\n    // Search columns from bottom to top.\r\n    for (let col = 0; col < this.numCols; col++) {\r\n      for (let row = this.numRows-1; row >= 0; row--) {\r\n        // If this cell doesn't have a dot, replace it with the closest dot above.\r\n        if (!this.grid[col][row].dot) {\r\n          let aboveDot = this.getClosestDotAbove(col, row);\r\n          if (aboveDot) {\r\n            this.moveDotToCell(aboveDot, col, row);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Fills empty cells in the top row until the grid is full.\r\n  fillGrid() {\r\n    while (this.topRowHasEmpty() == true) {\r\n      this.grid.forEach((col, colIndex) => {\r\n        let topCell = col[0];\r\n        // If the top of this column doesn't have a dot.\r\n        if (!topCell.dot) {\r\n          topCell.dot = new Dot(this.scene, topCell.x, topCell.y, getCoordinatesObj(colIndex, 0), getRandomColor());\r\n          //topCell.dot.fadeIn();\r\n        }\r\n      })\r\n      // Shift down newly added dots where possible.\r\n      this.shiftDotsDown();\r\n    }\r\n  }\r\n\r\n  // Checks if the top row is missing any dots.\r\n  topRowHasEmpty() {\r\n    let hasEmpty = false;\r\n    this.grid.forEach((col) => {\r\n      let topCell = col[0];\r\n      // If the top of this column doesn't have a dot.\r\n      if (!topCell.dot) { hasEmpty = true; }\r\n    });\r\n    return hasEmpty;\r\n  }\r\n\r\n  // Checks if the current dot selection forms a loop.\r\n  selectionIsLoop() {\r\n    // A loop must have at least 3 dot selections.\r\n    if (this.selectedDots.length > 2) {\r\n      let firstDot = this.selectedDots[0];\r\n      let lastDot = this.selectedDots.slice(-1)[0];\r\n      // If first and last selection are the same dot.\r\n      if (firstDot.gridCell.col == lastDot.gridCell.col &&\r\n          firstDot.gridCell.row == lastDot.gridCell.row) {\r\n            return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // Destroys all dots of the provided color and returns the destroyed amount.\r\n  destroyAllDotsWithColor(color) {\r\n    // gamemanager increment score... might need to use events here???\r\n    this.selectedDots = this.getDotsWithSelectionColor();\r\n    this.destroySelectedDots();\r\n    return this.selectedDots.length;\r\n  }\r\n\r\n  // Returns an array of all dots of the provided color and starts their selection animation.\r\n  getDotsWithSelectionColor() {\r\n    let selectionColor = this.selectedDots[0].color;\r\n    let filteredDots = []\r\n    this.grid.forEach((column) => {\r\n      column.forEach((cell) => {\r\n        if (cell.dot.color === selectionColor) {\r\n          filteredDots.push(cell.dot);\r\n          cell.dot.selectedAnimation();\r\n        }\r\n      })\r\n    })\r\n\r\n    return filteredDots;\r\n  }\r\n\r\n  // Verify that the attempted seleciton is valid and add it to the current selection.\r\n  verifyDotSelection(dot) {\r\n    let selectedDots = this.selectedDots;\r\n\r\n    if (selectedDots.length > 0 && !this.selectionIsLoop()) {\r\n      // The most recently selected dot.\r\n      let prevDot = selectedDots.slice(-1)[0];\r\n      // Check if new dot is a valid connection.\r\n      if (selectedDots.length > 2) {\r\n        // Omitting the first dot from the includes-check since a loop is allowed here.\r\n        if (dot.isAdjacent(prevDot) && dot.color === prevDot.color && !selectedDots.slice(1).includes(dot)) {\r\n          this.addDotToSelection(dot);\r\n          if (this.selectionIsLoop()) {\r\n            this.getDotsWithSelectionColor();\r\n          }\r\n        }\r\n      } else {\r\n        // Loop is not allowed here so perform full includes-check.\r\n        if (dot.isAdjacent(prevDot) && dot.color === prevDot.color && !selectedDots.includes(dot)) {\r\n          this.addDotToSelection(dot);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Adds this dot to the selection and starts its selected animation.\r\n  addDotToSelection(dot) {\r\n    this.selectedDots.push(dot);\r\n    dot.selectedAnimation();\r\n  }\r\n\r\n  // Updates the grid after given the selection and returns the amount of destroyed dots.\r\n  updateGrid() {\r\n    let dotsDestroyed = 0;\r\n\r\n    if (this.selectionIsLoop()) {\r\n      dotsDestroyed = this.destroyAllDotsWithColor(this.selectedDots[0].color);\r\n    } else {\r\n      dotsDestroyed = this.destroySelectedDots();\r\n    }\r\n\r\n    this.shiftDotsDown();\r\n    this.fillGrid();\r\n    return dotsDestroyed;\r\n  }\r\n\r\n  // Stops each dot animation if exists.\r\n  stopDotAnimations() {\r\n    this.grid.forEach((column) => {\r\n      column.forEach((cell) => {\r\n        if (cell.dot) {\r\n          cell.dot.stopAnimation();\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  // Initialize this Hexagrid's grid[][] and sets each cell's worldspace position.\r\n  initializeGrid(dotBuffer, edgeBuffer) {\r\n    let gridCenter = {\r\n      x: this.scene.cameras.main.centerX,\r\n      y: this.scene.cameras.main.centerY * (3/4) // Want to leave 1/4 of screen for UI\r\n    };\r\n\r\n    let cellDistance = {\r\n      x: ((gridCenter.x * 2) / (this.numCols + 1)) - dotBuffer.X,\r\n      y: ((gridCenter.y * 2) / (this.numRows + 1)) - dotBuffer.Y\r\n    }\r\n    // Initializing grid to 2D array.\r\n    let grid = new Array(this.numCols);\r\n\r\n    for (let col = 0; col < this.numCols; col++) {\r\n\r\n      grid[col] = new Array(this.numRows);\r\n\r\n      for (let row = 0; row < this.numRows; row++) {\r\n        // Setting this cell's world position.\r\n        let cellPosition = {\r\n          x: (cellDistance.x * col) + edgeBuffer.X,\r\n          y: (cellDistance.y * row) + edgeBuffer.Y\r\n        }\r\n        // offset odd rows to be halfway between even rows.\r\n        if (row % 2 === 1)\r\n          cellPosition.x += cellDistance.x / 2;\r\n\r\n        grid[col][row] = {\r\n          x: cellPosition.x,\r\n          y: cellPosition.y,\r\n          dot: null\r\n        };\r\n      }\r\n    }\r\n\r\n    return grid;\r\n  }\r\n}\r\n","import { constants } from '../constants';\r\n\r\nexport class GameManager {\r\n\r\n  /**\r\n * Creates a GameManager that handles the round logic.\r\n * @param {Phaser.Scene} scene - The game scene that this class manages.\r\n * @param {number} timeLimit - The amount of time the player gets each round (seconds).\r\n */\r\n  constructor(scene, timeLimit) {\r\n    this.scene = scene;\r\n    this.timer = this.scene.time.delayedCall(timeLimit * 1000, this.endGame, {}, this);\r\n    this.score = 0;\r\n    this.gameOver = false;\r\n  }\r\n\r\n  incrementScore(amount) {\r\n    this.score += amount;\r\n    this.scoreText.text = this.score;\r\n  }\r\n\r\n  resetScore() {\r\n    this.score = 0;\r\n    this.scoreText.text = this.score;\r\n  }\r\n\r\n  startGame() {\r\n    this.screenCenter = {\r\n      x: this.scene.cameras.main.centerX,\r\n      y: this.scene.cameras.main.centerY * (4/3)\r\n    };\r\n\r\n    let fontConfig = { fontFamily: 'Monospace', fontSize: 48, color: '#2f3030' };\r\n    this.timerText = this.scene.add.text(150, this.screenCenter.y + 75, this.getFormattedTime(), fontConfig).setOrigin(0.5, 0.5);\r\n    this.scoreText = this.scene.add.text((this.screenCenter.x * 2) - 125, this.screenCenter.y + 75, this.score, fontConfig).setOrigin(0.5, 0.5);\r\n  }\r\n\r\n  endGame() {\r\n    this.gameOver = true;\r\n    this.scene.add.image(this.screenCenter.x, this.screenCenter.y / 2, constants.IMAGES.GAMEOVER).setOrigin(0.5, 0.5);\r\n\r\n    let restartButton = this.scene.add.image(this.screenCenter.x, this.screenCenter.y + 50, constants.IMAGES.RESTART).setOrigin(0.5, 0.5).setScale(0.5);\r\n    restartButton.setInteractive();\r\n    restartButton.on('pointerup', ()=> { this.scene.scene.start(constants.SCENES.PLAY); });\r\n\r\n    let quitButton = this.scene.add.image(this.screenCenter.x, this.screenCenter.y + 100, constants.IMAGES.QUIT).setOrigin(0.5, 0.5).setScale(0.5);\r\n    quitButton.setInteractive();\r\n    quitButton.on('pointerup', ()=> { this.scene.scene.start(constants.SCENES.MENU); });\r\n  }\r\n\r\n  getFormattedTime() {\r\n    let timeRemaining = Phaser.Math.FloorTo(this.timer.getRemainingSeconds())\r\n    let min = Phaser.Math.FloorTo(timeRemaining / 60);\r\n    let sec = timeRemaining % 60;\r\n\r\n    if (sec < 10) {\r\n      sec = '0' + sec;\r\n    }\r\n\r\n    return min + ':' + sec;\r\n  }\r\n\r\n  update() {\r\n    this.timerText.text = this.getFormattedTime();\r\n  }\r\n}\r\n","import { constants } from '../constants';\r\n\r\nexport class GraphicsManager {\r\n\r\n  /**\r\n * Creates a GraphicsManager that handles all graphics objects and updates animations.\r\n * @param {Phaser.Scene} scene - The game scene that this class draws to.\r\n */\r\n  constructor(scene) {\r\n    this.scene = scene;\r\n    this.backgroundGraphics = this.scene.add.graphics();\r\n    this.selectionGraphics = this.scene.add.graphics();\r\n    this.pointerGraphics = this.scene.add.graphics();\r\n  }\r\n\r\n  // Draw curves on the scene to separate columns.\r\n  drawColumnLines() {\r\n    let hexaGrid = this.scene.hexaGrid;\r\n    let points = []\r\n    let xDistance = hexaGrid.grid[0][1].x - hexaGrid.grid[0][0].x;\r\n\r\n    for (let col = 0; col < hexaGrid.numCols-1; col++) {\r\n      for (let row = 0; row < hexaGrid.numRows; row++) {\r\n        let hexaGridx = hexaGrid.grid[col][row].x;\r\n        let hexaGridy = hexaGrid.grid[col][row].y;\r\n        points.push(new Phaser.Math.Vector2(hexaGridx + xDistance, hexaGridy)); // (hexaGridx + 50\r\n      }\r\n\r\n      let curve = new Phaser.Curves.Spline(points);\r\n      this.backgroundGraphics.lineStyle(2, 0xA3A2A2, 1);\r\n      curve.draw(this.backgroundGraphics, 64);\r\n      points = []\r\n    }\r\n  }\r\n\r\n  // Draw lines between all selected dots in order.\r\n  drawSelectionLines() {\r\n    let selectedDots = this.scene.hexaGrid.selectedDots;\r\n    let graphics = this.selectionGraphics;\r\n    graphics.clear();\r\n\r\n    if (selectedDots.length > 1) {\r\n      graphics.lineStyle(3.5, selectedDots[0].color);\r\n      graphics.beginPath();\r\n      graphics.moveTo(selectedDots[0].x, selectedDots[0].y);\r\n      for (let i = 1; i < selectedDots.length; i++) {\r\n        graphics.lineTo(selectedDots[i].x, selectedDots[i].y);\r\n      }\r\n      graphics.strokePath();\r\n    }\r\n  }\r\n\r\n  // Draw a line where the mouse is when making a selection.\r\n  drawPointerLine() {\r\n    let hexaGrid = this.scene.hexaGrid;\r\n    let graphics = this.pointerGraphics;\r\n\r\n    graphics.clear();\r\n\r\n    let selectedDots = hexaGrid.selectedDots;\r\n    let pointer = this.scene.input.activePointer;\r\n\r\n    if ( selectedDots.length === 0 || hexaGrid.selectionIsLoop() ) return;\r\n    if ( pointer.x === 0 || pointer.y === 0 ) return;\r\n\r\n    if (selectedDots.length > 0 && !hexaGrid.selectionIsLoop()) {\r\n      graphics.lineStyle(3.5, selectedDots[0].color);\r\n      graphics.beginPath();\r\n      graphics.moveTo(selectedDots[selectedDots.length-1].x, selectedDots[selectedDots.length-1].y);\r\n      graphics.lineTo(pointer.x, pointer.y);\r\n      graphics.strokePath();\r\n    }\r\n  }\r\n\r\n  // Call each dots update function to show animations.\r\n  updateDots() {\r\n    let grid = this.scene.hexaGrid.grid;\r\n\r\n    grid.forEach((column) => {\r\n      column.forEach((cell) => {\r\n        cell.dot.update();\r\n      })\r\n    })\r\n  }\r\n\r\n  // delete this\r\n  // Tint screen the selection color once a loop is detected.\r\n  tintScreen() {\r\n    let colorOverlay = this.uiHandler.colorOverlay;\r\n    if (this.selection.loop) {\r\n      colorOverlay.fillColor = DOT_COLORS[this.selection.colorId]._color;\r\n      colorOverlay.setVisible(true);\r\n    }\r\n    else {\r\n      colorOverlay.setVisible(false);\r\n    }\r\n  }\r\n}\r\n","import { HexaGrid } from '../classes/HexaGrid';\r\nimport { GameManager } from '../classes/GameManager';\r\nimport { GraphicsManager } from '../classes/GraphicsManager';\r\nimport { constants } from '../constants';\r\nimport { loadImages } from '../utils';\r\n\r\nexport class PlayScene extends Phaser.Scene {\r\n\r\n  constructor() {\r\n    super({\r\n      key: constants.SCENES.PLAY\r\n    });\r\n  }\r\n\r\n  preload() {\r\n    loadImages(this, 'game');\r\n  }\r\n\r\n  create() {\r\n    this.hexaGrid = new HexaGrid(this, constants.GAME_SETTINGS);\r\n    this.gameManager = new GameManager(this, constants.GAME_SETTINGS.TIME_LIMIT);\r\n    this.gameManager.startGame();\r\n\r\n    this.add.image(0, 0, constants.IMAGES.BG).setOrigin(0).setDepth(-1);\r\n    this.graphicsManager = new GraphicsManager(this);\r\n    this.graphicsManager.drawColumnLines();\r\n\r\n    this.input.on('gameobjectdown', this.startSelection.bind(this));\r\n    this.input.on('gameobjectover', this.appendSelection.bind(this));\r\n    this.input.on('pointerup', this.confirmSelection.bind(this));\r\n  }\r\n\r\n  update() {\r\n    this.graphicsManager.drawPointerLine();\r\n    this.graphicsManager.updateDots();\r\n    this.gameManager.update();\r\n  }\r\n\r\n  startSelection(pointer, dot) {\r\n    if (!this.gameManager.gameOver) {\r\n      this.hexaGrid.addDotToSelection(dot);\r\n    }\r\n  }\r\n\r\n  appendSelection(pointer, dot) {\r\n    if (!this.gameManager.gameOver) {\r\n      this.hexaGrid.verifyDotSelection(dot);\r\n      this.graphicsManager.drawSelectionLines();\r\n    }\r\n  }\r\n\r\n  confirmSelection() {\r\n    if (this.hexaGrid.selectedDots.length > 1) {\r\n      let pointsScored = this.hexaGrid.updateGrid();\r\n      this.gameManager.incrementScore(pointsScored);\r\n    } else {\r\n      this.hexaGrid.stopDotAnimations();\r\n    }\r\n\r\n    this.hexaGrid.selectedDots = [];\r\n    this.graphicsManager.selectionGraphics.clear();\r\n  }\r\n}\r\n","import { MenuScene } from './scenes/MenuScene';\r\nimport { PlayScene } from './scenes/PlayScene';\r\n\r\nconst config = {\r\n  type: Phaser.AUTO,\r\n  width: 800,\r\n  height: 600,\r\n  scale: {\r\n    autoCenter: Phaser.Scale.CENTER_BOTH,\r\n  },\r\n  scene: [\r\n    MenuScene,\r\n    PlayScene\r\n  ]\r\n};\r\n\r\nconst game = new Phaser.Game(config);\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}